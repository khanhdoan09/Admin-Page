
@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

@section AddJS{
    <script src="~/Content/js/admin/admin.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"
            type="text/javascript"></script>
}

@section AddCSS{
    <link rel="stylesheet" href="~/Content/css/admin/info_product.css">
}



<div class="function">
    <button class="add">
        <a href="./add_product.html">Add Product</a>
    </button>
    <form action="" method="post">
        <input type="text" name="search">
        <button type="submit">
            <i class="fas fa-search"></i>
        </button>
    </form>


</div>
<div class="container-home">
    <div class="menu">
        <ul>
            <li class="menu-item">
                <a href="./index.html">Product</a>
            </li>
            <li class="menu-item">
                <a href="">Account</a>
            </li>
            <li class="menu-item">
                <a href="">Order</a>
            </li>
            <li class="menu-item">
                <a href="./add_product.html">Add Product</a>
            </li>
            <li class="menu-item">
                <a href="./login.html">Log Out</a>
            </li>
        </ul>
    </div>
    @model WatchShop.Models.ProductDetailAdmin
    <div class="content">

        @using (Ajax.BeginForm("SaveEditProduct",
            "Admin",
            new { IdOld = @ViewBag.IdEditProduct },
            new AjaxOptions()
            {
                HttpMethod = "POST",
                OnSuccess = "OnSuccess"
            },
            new { enctype = "multipart/form-data" }))
        {

            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Id)
                    @Html.TextBoxFor(model => model.Product.Id)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Name)
                    @Html.TextBoxFor(model => model.Product.Name)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Price)
                    @Html.TextBoxFor(model => model.Product.Price)
                </div>
            </div>
            <div class="row">
                <div>
                    <label>Image</label>
                    <div style="display:flex;flex-wrap:wrap; justify-content:space-between">
                        @{
                            for (int i = 0; i < Model.ListImage.Count; i++)
                            {
                                <img width="300" height="300" src="/Content/image/product/@Model.ListImage[i].Url" />
                            }
                        }
                    </div>


                </div>


            </div>

            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Discount)
                    @Html.TextBoxFor(model => model.Product.Discount)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Import)
                    @Html.TextBoxFor(model => model.Product.Import)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Brand)
                    @Html.TextBoxFor(model => model.Product.Brand)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Gender)
                    @Html.TextBoxFor(model => model.Product.Gender)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Origin)
                    @Html.TextBoxFor(model => model.Product.Origin)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.WarrantyPeriod)
                    @Html.TextBoxFor(model => model.Product.WarrantyPeriod)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Diameter)
                    @Html.TextBoxFor(model => model.Product.Diameter)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Material)
                    @Html.TextBoxFor(model => model.Product.Material)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Strap)
                    @Html.TextBoxFor(model => model.Product.Strap)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Apparatus)
                    @Html.TextBoxFor(model => model.Product.Apparatus)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Waterproof)
                    @Html.TextBoxFor(model => model.Product.Waterproof)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.CreateDate)
                    @Html.TextBoxFor(model => model.Product.CreateDate)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Description)
                    @Html.TextAreaFor(model => model.Product.Description)
                </div>
            </div>

            <div class="submit">
                <button type="submit">Save</button>
            </div>
        }

        <!--
        <form action="/Admin/SaveEditProduct?IdOld=@ViewBag.IdEditProduct" method="post" enctype="multipart/form-data">
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Id)
                    @Html.TextBoxFor(model => model.Product.Id)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Name)
                    @Html.TextBoxFor(model => model.Product.Name)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Price)
                    @Html.TextBoxFor(model => model.Product.Price)
                </div>
            </div>
            <div class="row">
                <div>
                    <label>Image</label>
                    <div style="display:flex;flex-wrap:wrap; justify-content:space-between">
                        @{
                            for (int i = 0; i < Model.ListImage.Count; i++)
                            {
                                <img width="300" height="300" src="/Content/image/product/@Model.ListImage[i].Url" />
                            }
                        }
                    </div>


                </div>


            </div>

            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Discount)
                    @Html.TextBoxFor(model => model.Product.Discount)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Import)
                    @Html.TextBoxFor(model => model.Product.Import)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Brand)
                    @Html.TextBoxFor(model => model.Product.Brand)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Gender)
                    @Html.TextBoxFor(model => model.Product.Gender)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Origin)
                    @Html.TextBoxFor(model => model.Product.Origin)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.WarrantyPeriod)
                    @Html.TextBoxFor(model => model.Product.WarrantyPeriod)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Diameter)
                    @Html.TextBoxFor(model => model.Product.Diameter)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Material)
                    @Html.TextBoxFor(model => model.Product.Material)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Strap)
                    @Html.TextBoxFor(model => model.Product.Strap)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Apparatus)
                    @Html.TextBoxFor(model => model.Product.Apparatus)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.Waterproof)
                    @Html.TextBoxFor(model => model.Product.Waterproof)
                </div>

                <div>
                    @Html.LabelFor(model => model.Product.CreateDate)
                    @Html.TextBoxFor(model => model.Product.CreateDate)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Product.Description)
                    @Html.TextAreaFor(model => model.Product.Description)
                </div>
            </div>

            <div class="submit">
                <button type="submit">Save</button>
            </div>

        </form>
        -->
    </div>
</div>


<script>
    function OnSuccess(e) {
        alert(e.text)
    }

</script>