
@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

@section AddJS{
    <script src="~/Content/js/admin/admin.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"
            type="text/javascript"></script>
}

@section AddCSS{
    <link rel="stylesheet" href="~/Content/css/admin/info_product.css">
}



<div class="function">
    <button class="add">
        @Html.ActionLink("Add Product", "AddProduct", "Admin")
    </button>
    <form action="" method="post">
        <input type="text" name="search">
        <button type="submit">
            <i class="fas fa-search"></i>
        </button>
    </form>


</div>
<div class="container-home">

    @Html.Partial("MenuBarAdmin")


    @model WatchShop.Models.Product
    <div class="content">

        @using (Ajax.BeginForm("SaveEditProduct",
"Admin",
new { IdOld = @ViewBag.IdEditProduct },
new AjaxOptions()
{
    HttpMethod = "POST",
    OnSuccess = "OnSuccess"
},
new { enctype = "multipart/form-data" }))
        {

            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Id)
                    @Html.TextBoxFor(model => model.Id)
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Name)
                    @Html.TextBoxFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                </div>

                <div>
                    @Html.LabelFor(model => model.Price)
                    @Html.TextBoxFor(model => model.Price)
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row">
                <div>
                    <div style="display:flex; flex-direction: row; flex-wrap:wrap; justify-content:space-evenly;">
                        <input class="imgLoad" name="image_1" type="file" id="imgLoad_1"  style="width:fit-content;height:fit-content"/>
                        <img width="300" height="300" src="/Content/image/product/@Model.Avatar" id="imgShow_1" />

                        @{int CountI = 1;}
                        @foreach (var Image in Model.Images)
                        {
                            CountI += 1;
                            <input class="imgLoad" name="image_@CountI" type="file" id="imgLoad_@CountI" style="width:fit-content;height:fit-content"/>
                            <img style="margin: 10px 0;" width="300" height="300" src="/Content/image/product/@Image.Url" id="imgShow_@CountI" />
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Discount)
                    @Html.TextBoxFor(model => model.Discount)
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })

                </div>

                <div>
                    @Html.LabelFor(model => model.Import)
                    @Html.TextBoxFor(model => model.Import)
                    @Html.ValidationMessageFor(model => model.Import, "", new { @class = "text-danger" })

                </div>

                <div>
                    @Html.LabelFor(model => model.Brand)
                    @Html.TextBoxFor(model => model.Brand)
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Gender)
                    @Html.TextBoxFor(model => model.Gender)
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                </div>

                <div>
                    @Html.LabelFor(model => model.Origin)
                    @Html.TextBoxFor(model => model.Origin)
                    @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })

                </div>

                <div>
                    @Html.LabelFor(model => model.WarrantyPeriod)
                    @Html.TextBoxFor(model => model.WarrantyPeriod)
                    @Html.ValidationMessageFor(model => model.WarrantyPeriod, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Diameter)
                    @Html.TextBoxFor(model => model.Diameter)
                    @Html.ValidationMessageFor(model => model.Diameter, "", new { @class = "text-danger" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Material)
                    @Html.TextBoxFor(model => model.Material)
                    @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Strap)
                    @Html.TextBoxFor(model => model.Strap)
                    @Html.ValidationMessageFor(model => model.Strap, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Apparatus)
                    @Html.TextBoxFor(model => model.Apparatus)
                    @Html.ValidationMessageFor(model => model.Apparatus, "", new { @class = "text-danger" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Waterproof)
                    @Html.TextBoxFor(model => model.Waterproof)
                    @Html.ValidationMessageFor(model => model.Waterproof, "", new { @class = "text-danger" })
                </div>

                <div>
                    @Html.LabelFor(model => model.CreateDate)
                    @Html.TextBoxFor(model => model.CreateDate);
                    @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.WireWidth)
                    @Html.TextBoxFor(model => model.WireWidth, new { @required = true })
                    @Html.ValidationMessageFor(model => model.WireWidth, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.LabelFor(model => model.Stock)
                    @Html.TextBoxFor(model => model.Stock, new { @required = true })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Description)
                    @Html.TextAreaFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="submit">
                <button type="submit">Save</button>
            </div>
        }

    </div>
</div>


<script>
    function OnSuccess(e) {
        alert(e.text)
    }
</script>